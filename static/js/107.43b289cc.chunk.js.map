{"version":3,"file":"static/js/107.43b289cc.chunk.js","mappings":"mOAuBA,EArBmB,SAAH,GAA6B,IAAvBA,EAAe,EAAfA,gBACpB,GAA2BC,EAAAA,EAAAA,UAAS,IAAG,eAAhCC,EAAK,KAAEC,EAAQ,KAYtB,OACE,kBAAMC,SAPS,SAACC,GAChBA,EAAEC,iBACFN,EAAgBE,EAAQ,CAAEA,MAAOA,EAAMK,QAAW,CAAC,GACnDJ,EAAS,GACX,EAG2B,WACvB,kBAAOK,KAAK,OAAOC,SAZN,SAACJ,GAChBF,EAASE,EAAEK,OAAOC,MACpB,EAU2CA,MAAOT,KAC9C,mBAAQM,KAAK,SAAQ,sBAG3B,E,SCRA,EAXmB,SAAH,GAAkB,IAAbI,EAAM,EAANA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,YAAwB,IAAtBC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAMC,EAAE,EAAFA,GACzB,OAAO,yBAAa,SAAC,KAAI,CAACC,GAAE,kBAAaD,GAAME,MAAO,CAACC,KAAKR,GAAU,SAAEG,GAASC,KAAjEC,EAClB,KAGN,ECiBA,EArBe,WAAO,IAAD,EACnB,GAA4BjB,EAAAA,EAAAA,UAAS,IAAG,eAAjCW,EAAM,KAAEU,EAAS,KACxB,GAAwCC,EAAAA,EAAAA,MAAiB,eAAlDC,EAAY,KAAExB,EAAe,KAC9BE,EAAiC,QAA5B,EAAGsB,EAAaC,IAAI,gBAAQ,QAAI,GAU3C,OATAC,EAAAA,EAAAA,YAAU,WACHxB,IACLyB,EAAAA,EAAAA,IAAYzB,GACT0B,MAAK,SAAAC,GACJP,EAAUO,EACZ,IACCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAI,GAClC,GAAG,CAAC7B,KAGF,iCACE,SAAC,EAAU,CAACF,gBAAiBA,KAC7B,SAAC,EAAU,CAACY,OAAQA,MAG1B,C,oLCxBAsB,EAAAA,GAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAM,mCAECC,EAAa,yCAAG,2GACJF,EAAAA,GAAAA,IAAU,6BAAD,OAA8BC,IAAO,KAAD,EAAxD,OAAwD,SAA5DE,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACZ,kBAHyB,mCAMbV,EAAW,yCAAG,WAAMzB,GAAK,8FACfgC,EAAAA,GAAAA,IAAU,yBAAD,OAA0BC,EAAG,kBAAUjC,IAAS,KAAD,EAAlE,OAAkE,SAAtEmC,EAAI,EAAJA,KAAI,kBACJA,EAAKC,SAAO,2CACpB,gBAHuB,sCAKXC,EAAe,yCAAG,WAAMrB,GAAE,sFACxBgB,EAAAA,GAAAA,IAAU,UAAD,OAAWhB,EAAE,oBAAYiB,IAAO,KAAD,8EACtD,gBAF2B,sCAIfK,EAAe,yCAAG,WAAMtB,GAAE,8FACfgB,EAAAA,GAAAA,IAAU,UAAD,OAAWhB,EAAE,4BAAoBiB,IAAM,OAA3D,OAA2D,SAA/DE,EAAI,EAAJA,KAAI,kBACJA,GAAI,2CACZ,gBAH2B,sCAKfI,EAAe,yCAAG,WAAMvB,GAAE,8FAChBgB,EAAAA,GAAAA,IAAU,UAAD,OAAWhB,EAAE,4BAAoBiB,IAAO,KAAD,EAA1D,OAA0D,SAA9DE,EAAI,EAAJA,KAAI,kBACJA,EAAKC,SAAO,2CACpB,gBAH2B,qC","sources":["components/SearchForm/SearchForm.jsx","components/SearchList/SearchList.jsx","pages /Movies /Movies.jsx","services1/api.js"],"sourcesContent":["import { useState } from 'react';\n\nconst SearchForm = ({ setSearchParams }) => {\n  const [query, setQuery ] = useState(\"\");\n\n  const onChange = (e) => {\n    setQuery(e.target.value);\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setSearchParams(query ? { query: query.trim() } : {});\n    setQuery('');\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input type=\"text\" onChange={onChange} value={query} />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import { Link, useLocation } from \"react-router-dom\"\n\nconst SearchList = ({movies}) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({title, name, id}) => {\n        return <li key={id}><Link to={`/movies/${id}`} state={{from:location}}>{title || name}</Link></li>\n      })}\n    </ul>\n  )\n}\n\nexport default SearchList","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { searchMovie } from 'services1/api';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport SearchList from 'components/SearchList/SearchList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  useEffect(() => {\n    if (!query) return;\n    searchMovie(query)\n      .then(resp => {\n        setMovies(resp);\n      })\n      .catch(err => console.log(err))\n  }, [query]);\n\n  return (\n    <>\n      <SearchForm setSearchParams={setSearchParams} />\n      <SearchList movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst KEY = '7c5d8002fbbd5b76a32e331288c58dfe';\n\nexport const trendingMovie = async () => {\n  const { data } = await axios.get(`/trending/all/day?api_key=${KEY}`);\n  return data;\n};\n\n\nexport const searchMovie = async query => {\n  const {data} = await axios.get(`/search/movie?api_key=${KEY}&query=${query}`);\n  return data.results\n};\n\nexport const getMovieDetails = async id => {\n  return await axios.get(`/movie/${id}?api_key=${KEY}`);\n};\n\nexport const getMovieCredits = async id => {\n  const {data} =  await axios.get(`/movie/${id}/credits?api_key=${KEY}`)\n  return data\n};\n\nexport const getMovieReviews = async id => {\n  const {data} = await axios.get(`/movie/${id}/reviews?api_key=${KEY}`);\n  return data.results\n};\n"],"names":["setSearchParams","useState","query","setQuery","onSubmit","e","preventDefault","trim","type","onChange","target","value","movies","location","useLocation","map","title","name","id","to","state","from","setMovies","useSearchParams","searchParams","get","useEffect","searchMovie","then","resp","catch","err","console","log","axios","KEY","trendingMovie","data","results","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}