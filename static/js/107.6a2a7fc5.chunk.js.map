{"version":3,"file":"static/js/107.6a2a7fc5.chunk.js","mappings":"mOAuBA,EArBmB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,gBACpB,GAA2BC,EAAAA,EAAAA,UAAS,IAApC,eAAOC,EAAP,KAAcC,EAAd,KAYA,OACE,kBAAMC,SAPS,SAACC,GAChBA,EAAEC,iBACFN,EAAgBE,EAAQ,CAAEA,MAAOA,EAAMK,QAAW,CAAC,GACnDJ,EAAS,GACV,EAGC,WACE,kBAAOK,KAAK,OAAOC,SAZN,SAACJ,GAChBF,EAASE,EAAEK,OAAOC,MACnB,EAU0CA,MAAOT,KAC9C,mBAAQM,KAAK,SAAb,sBAGL,E,SCRD,EAXmB,SAAC,GAAc,IAAbI,EAAY,EAAZA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,YAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,GACzB,OAAO,yBAAa,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAACC,KAAKR,GAAxC,SAAoDG,GAASC,KAAjEC,EACjB,KAGN,ECiBD,EArBe,WAAO,IAAD,EACnB,GAA4BjB,EAAAA,EAAAA,UAAS,IAArC,eAAOW,EAAP,KAAeU,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBxB,EAArB,KACME,EAAK,UAAGsB,EAAaC,IAAI,gBAApB,QAAgC,GAU3C,OATAC,EAAAA,EAAAA,YAAU,WACHxB,IACLyB,EAAAA,EAAAA,IAAYzB,GACT0B,MAAK,SAAAC,GACJP,EAAUO,EACX,IACAC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAAC7B,KAGF,iCACE,SAAC,EAAD,CAAYF,gBAAiBA,KAC7B,SAAC,EAAD,CAAYY,OAAQA,MAGzB,C,6LCxBDsB,EAAAA,GAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAM,mCAECC,EAAa,mCAAG,sGACJF,EAAAA,GAAAA,IAAA,oCAAuCC,IADnC,uBACnBE,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,qDAMbV,EAAW,mCAAG,WAAMzB,GAAN,yFACJgC,EAAAA,GAAAA,IAAA,gCAAmCC,EAAnC,kBAAgDjC,IAD5C,uBAClBmC,EADkB,EAClBA,KADkB,kBAElBA,EAAKC,SAFa,2CAAH,sDAKXC,EAAe,mCAAG,WAAMrB,GAAN,iFAChBgB,EAAAA,GAAAA,IAAA,iBAAoBhB,EAApB,oBAAkCiB,IADlB,mFAAH,sDAIfK,EAAe,mCAAG,WAAMtB,GAAN,yFACPgB,EAAAA,GAAAA,IAAA,iBAAoBhB,EAApB,4BAA0CiB,IADnC,uBACtBE,EADsB,EACtBA,KADsB,kBAEtBA,GAFsB,2CAAH,sDAKfI,EAAe,mCAAG,WAAMvB,GAAN,yFACRgB,EAAAA,GAAAA,IAAA,iBAAoBhB,EAApB,4BAA0CiB,IADlC,uBACtBE,EADsB,EACtBA,KADsB,kBAEtBA,EAAKC,SAFiB,2CAAH,qD","sources":["components/SearchForm/SearchForm.jsx","components/SearchList/SearchList.jsx","pages /Movies /Movies.jsx","services1/api.js"],"sourcesContent":["import { useState } from 'react';\n\nconst SearchForm = ({ setSearchParams }) => {\n  const [query, setQuery ] = useState(\"\");\n\n  const onChange = (e) => {\n    setQuery(e.target.value);\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setSearchParams(query ? { query: query.trim() } : {});\n    setQuery('');\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input type=\"text\" onChange={onChange} value={query} />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import { Link, useLocation } from \"react-router-dom\"\n\nconst SearchList = ({movies}) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({title, name, id}) => {\n        return <li key={id}><Link to={`/movies/${id}`} state={{from:location}}>{title || name}</Link></li>\n      })}\n    </ul>\n  )\n}\n\nexport default SearchList","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { searchMovie } from 'services1/api';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport SearchList from 'components/SearchList/SearchList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  useEffect(() => {\n    if (!query) return;\n    searchMovie(query)\n      .then(resp => {\n        setMovies(resp);\n      })\n      .catch(err => console.log(err))\n  }, [query]);\n\n  return (\n    <>\n      <SearchForm setSearchParams={setSearchParams} />\n      <SearchList movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst KEY = '7c5d8002fbbd5b76a32e331288c58dfe';\n\nexport const trendingMovie = async () => {\n  const { data } = await axios.get(`/trending/all/day?api_key=${KEY}`);\n  return data;\n};\n\n\nexport const searchMovie = async query => {\n  const {data} = await axios.get(`/search/movie?api_key=${KEY}&query=${query}`);\n  return data.results\n};\n\nexport const getMovieDetails = async id => {\n  return await axios.get(`/movie/${id}?api_key=${KEY}`);\n};\n\nexport const getMovieCredits = async id => {\n  const {data} =  await axios.get(`/movie/${id}/credits?api_key=${KEY}`)\n  return data\n};\n\nexport const getMovieReviews = async id => {\n  const {data} = await axios.get(`/movie/${id}/reviews?api_key=${KEY}`);\n  return data.results\n};\n"],"names":["setSearchParams","useState","query","setQuery","onSubmit","e","preventDefault","trim","type","onChange","target","value","movies","location","useLocation","map","title","name","id","to","state","from","setMovies","useSearchParams","searchParams","get","useEffect","searchMovie","then","resp","catch","err","console","log","axios","KEY","trendingMovie","data","results","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}